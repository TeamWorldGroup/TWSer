{"version":3,"sources":["lib/experience.js"],"names":["module","exports","distanceToXpLevel","getXpLevel","getXpRequired","getBaseXpFromLevel","xp","toLevel","level","levelBaseXp","requiredXp","a","b","c","Math","floor","sqrt"],"mappings":";;AAAAA,OAAOC,OAAP,GAAe,EAACC,oCAAD,EAAmBC,sBAAnB,EAA8BC,4BAA9B,EAA4CC,sCAA5C,EAAf;;AAEA,SAASH,iBAAT,CAA2BI,EAA3B,EAA+BC,OAA/B,EAAwC;AACtC,MAAMC,QAAQL,WAAWG,EAAX,CAAd;AACA,MAAI,CAACC,OAAL,EAAcA,UAAUC,QAAM,CAAhB;AACd,MAAMC,cAAcJ,mBAAmBG,KAAnB,CAApB;AACA,MAAME,aAAaN,cAAcI,KAAd,EAAqBD,OAArB,CAAnB;AACA,SAAO,CAACD,KAAKG,WAAN,IAAqBC,UAA5B;AACD;;AAED,SAASP,UAAT,CAAoBG,EAApB,EAAwB;AACtB;AACA,MAAIK,UAAJ;AACA,MAAIC,UAAJ;AACA,MAAIC,UAAJ;AACA,MAAIP,KAAK,GAAT,EAAc;AAAE;AACdK,QAAI,CAAJ;AACAC,QAAI,CAAJ;AACAC,QAAI,CAAJ;AACD,GAJD,MAIO,IAAIP,KAAK,IAAT,EAAe;AAAE;AACtBK,QAAI,GAAJ;AACAC,QAAI,CAAC,IAAL;AACAC,QAAI,GAAJ;AACD,GAJM,MAIA;AAAE;AACPF,QAAI,GAAJ;AACAC,QAAI,CAAC,KAAL;AACAC,QAAI,IAAJ;AACD;AACDA,OAAKP,EAAL;AACA,SAAOQ,KAAKC,KAAL,CAAW,CAAC,CAACH,CAAD,GAAKE,KAAKE,IAAL,CAAUJ,IAAEA,CAAF,GAAM,IAAED,CAAF,GAAIE,CAApB,CAAN,KAAiC,IAAIF,CAArC,CAAX,CAAP,CAnBsB,CAmBsC;AAC7D;;AAED,SAASP,aAAT,CAAuBI,KAAvB,EAA8BD,OAA9B,EAAuC;AACrC,MAAI,CAACA,OAAL,EAAcA,UAAUC,QAAQ,CAAlB;AACd,SAAOH,mBAAmBE,OAAnB,IAA8BF,mBAAmBG,KAAnB,CAArC;AACD;;AAED,SAASH,kBAAT,CAA4BG,KAA5B,EAAkC;AAChC;AACA;AACA,MAAIA,SAAS,EAAb,EAAiB;AACf,WAAOA,QAAMA,KAAN,GAAc,IAAEA,KAAvB;AACD,GAFD,MAEO,IAAIA,SAAS,EAAb,EAAiB;AACtB,WAAO,MAAIA,KAAJ,GAAUA,KAAV,GAAkB,OAAKA,KAAvB,GAA+B,GAAtC;AACD,GAFM,MAEA;AAAE;AACP,WAAO,MAAIA,KAAJ,GAAUA,KAAV,GAAkB,QAAMA,KAAxB,GAAgC,IAAvC;AACD;AACF","file":"../../lib/experience.js","sourcesContent":["module.exports={distanceToXpLevel,getXpLevel,getXpRequired,getBaseXpFromLevel};\n\nfunction distanceToXpLevel(xp, toLevel) {\n  const level = getXpLevel(xp);\n  if (!toLevel) toLevel = level+1;\n  const levelBaseXp = getBaseXpFromLevel(level);\n  const requiredXp = getXpRequired(level, toLevel);\n  return (xp - levelBaseXp) / requiredXp;\n}\n\nfunction getXpLevel(xp) {\n  // I have to use quadratic equation to reverse the equation from getBaseXpFromLevel(). Ugh.\n  let a;\n  let b;\n  let c;\n  if (xp < 352) { // 352 == Experience at level 16\n    a = 1;\n    b = 6;\n    c = 0;\n  } else if (xp < 1507) { // 1507 == Experience at level 31\n    a = 2.5;\n    b = -40.5;\n    c = 360;\n  } else { // Level 32+\n    a = 4.5;\n    b = -162.5;\n    c = 2220;\n  }\n  c -= xp;\n  return Math.floor((-b + Math.sqrt(b*b - 4*a*c)) / (2 * a)); // Math class was useful I guess mmph\n}\n\nfunction getXpRequired(level, toLevel) {\n  if (!toLevel) toLevel = level + 1;\n  return getBaseXpFromLevel(toLevel) - getBaseXpFromLevel(level);\n}\n\nfunction getBaseXpFromLevel(level){\n  // The equations in this function are stupid and directly from the MC Wiki\n  // http://minecraft.gamepedia.com/Experience#Leveling_up\n  if (level <= 16) {\n    return level*level + 6*level;\n  } else if (level <= 31) {\n    return 2.5*level*level - 40.5*level + 360;\n  } else { // 32+\n    return 4.5*level*level - 162.5*level + 2220;\n  }\n}"]}