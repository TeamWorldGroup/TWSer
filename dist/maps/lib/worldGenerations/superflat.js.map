{"version":3,"sources":["lib/worldGenerations/superflat.js"],"names":["Chunk","require","Vec3","generation","opt","bottom_id","middle_id","top_id","middle_thickness","debug","generateChunk","chunk","height","DEBUG_POINTS","x","z","y","setBlockType","setSkyLight","forEach","p","module","exports"],"mappings":";;AAAA,IAAMA,QAAQC,QAAQ,kBAAR,EAA4BA,QAAQ,YAAR,CAA5B,CAAd;AACA,IAAMC,OAAOD,QAAQ,MAAR,EAAgBC,IAA7B;;AAEA,SAASC,UAAT,GAAwG;AAAA,iFAAJ,EAAI;AAAA,sBAAnFC,GAAmF;AAAA,MAAnFA,GAAmF,4BAA/E,SAA+E;AAAA,4BAArEC,SAAqE;AAAA,MAArEA,SAAqE,kCAA3D,CAA2D;AAAA,4BAAzDC,SAAyD;AAAA,MAAzDA,SAAyD,kCAA/C,CAA+C;AAAA,yBAA7CC,MAA6C;AAAA,MAA7CA,MAA6C,+BAAtC,CAAsC;AAAA,mCAApCC,gBAAoC;AAAA,MAApCA,gBAAoC,yCAAnB,CAAmB;AAAA,wBAAjBC,KAAiB;AAAA,MAAjBA,KAAiB,8BAAX,KAAW;;AACtG,WAASC,aAAT,GAAyB;AACvB,QAAMC,QAAM,IAAIX,KAAJ,EAAZ;AACA,QAAMY,SAASJ,mBAAmB,CAAlC;AACA,QAAMK,eAAe,CAAC,IAAIX,IAAJ,CAAS,CAAT,EAAYU,MAAZ,EAAoB,CAApB,CAAD,EAAyB,IAAIV,IAAJ,CAAS,EAAT,EAAaU,MAAb,EAAqB,CAArB,CAAzB,EAAkD,IAAIV,IAAJ,CAAS,CAAT,EAAYU,MAAZ,EAAoB,EAApB,CAAlD,EAA2E,IAAIV,IAAJ,CAAS,EAAT,EAAaU,MAAb,EAAqB,EAArB,CAA3E,CAArB;AACA,SAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;AAC3B,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;AAC3B,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIR,mBAAmB,CAAvC,EAA0CQ,GAA1C,EAA+C;AAC7C,cAAIA,KAAK,CAAT,EAAYL,MAAMM,YAAN,CAAmB,IAAIf,IAAJ,CAASY,CAAT,EAAYE,CAAZ,EAAeD,CAAf,CAAnB,EAAsCV,SAAtC,EAAZ,KACK,IAAIW,IAAIR,mBAAmB,CAA3B,EAA8BG,MAAMM,YAAN,CAAmB,IAAIf,IAAJ,CAASY,CAAT,EAAYE,CAAZ,EAAeD,CAAf,CAAnB,EAAsCT,SAAtC,EAA9B,KACAK,MAAMM,YAAN,CAAmB,IAAIf,IAAJ,CAASY,CAAT,EAAYE,CAAZ,EAAeD,CAAf,CAAnB,EAAsCR,MAAtC;AACN;AACD,aAAK,IAAIS,KAAI,CAAb,EAAgBA,KAAI,GAApB,EAAyBA,IAAzB,EAA8B;AAC5BL,gBAAMO,WAAN,CAAkB,IAAIhB,IAAJ,CAASY,CAAT,EAAYE,EAAZ,EAAeD,CAAf,CAAlB,EAAqC,EAArC;AACD;AACF;AACF;;AAED,QAAIN,KAAJ,EACII,aAAaM,OAAb,CAAqB;AAAA,aAAKR,MAAMM,YAAN,CAAmBG,CAAnB,EAAsB,EAAtB,CAAL;AAAA,KAArB;AACJ,WAAOT,KAAP;AACD;AACD,SAAOD,aAAP;AACD;;AAEDW,OAAOC,OAAP,GAAenB,UAAf","file":"../../../lib/worldGenerations/superflat.js","sourcesContent":["const Chunk = require('prismarine-chunk')(require(\"../version\"));\nconst Vec3 = require('vec3').Vec3;\n\nfunction generation({opt='default',bottom_id=7,middle_id=1,top_id=2,middle_thickness=3,debug=false}={}) {\n  function generateChunk() {\n    const chunk=new Chunk();\n    const height = middle_thickness + 1;\n    const DEBUG_POINTS = [new Vec3(0, height, 0), new Vec3(15, height, 0), new Vec3(0, height, 15), new Vec3(15, height, 15)];\n    for (let x = 0; x < 16; x++) {\n      for (let z = 0; z < 16; z++) {\n        for (let y = 0; y < middle_thickness + 2; y++) {\n          if (y == 0) chunk.setBlockType(new Vec3(x, y, z), bottom_id);\n          else if (y < middle_thickness + 1) chunk.setBlockType(new Vec3(x, y, z), middle_id);\n          else chunk.setBlockType(new Vec3(x, y, z), top_id);\n        }\n        for (let y = 0; y < 256; y++) {\n          chunk.setSkyLight(new Vec3(x, y, z), 15);\n        }\n      }\n    }\n\n    if (debug)\n        DEBUG_POINTS.forEach(p => chunk.setBlockType(p, 35));\n    return chunk;\n  }\n  return generateChunk;\n}\n\nmodule.exports=generation;"]}