{"version":3,"sources":["lib/worldGenerations/nether.js"],"names":["Chunk","require","Vec3","rand","generation","seed","level","generateChunk","chunkX","chunkZ","seedRand","create","chunk","x","z","bedrockheighttop","bedrockheightbottom","y","block","data","pos","setBlockType","setBlockData","module","exports"],"mappings":";;AAAA,IAAMA,QAAQC,QAAQ,kBAAR,EAA4BA,QAAQ,YAAR,CAA5B,CAAd;AACA,IAAMC,OAAOD,QAAQ,MAAR,EAAgBC,IAA7B;AACA,IAAMC,OAAOF,QAAQ,aAAR,CAAb;;AAEA,SAASG,UAAT,GAAwC;AAAA,iFAAJ,EAAI;AAAA,MAAnBC,IAAmB,QAAnBA,IAAmB;AAAA,wBAAdC,KAAc;AAAA,MAAdA,KAAc,8BAAR,EAAQ;;AACtC,WAASC,aAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuC;AACrC,QAAMC,WAAWP,KAAKQ,MAAL,CAAYN,OAAK,GAAL,GAASG,MAAT,GAAgB,GAAhB,GAAoBC,MAAhC,CAAjB;AACA,QAAMG,QAAM,IAAIZ,KAAJ,EAAZ;AACA,SAAK,IAAIa,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;AAC3B,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;AAC3B,YAAMC,mBAAmB,IAAIL,SAAS,CAAT,CAA7B;AACA,YAAMM,sBAAsB,IAAIN,SAAS,CAAT,CAAhC;AACA,aAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAI,GAApB,EAAyBA,GAAzB,EAA8B;AAAE;AAC9B,cAAIC,cAAJ;AACA,cAAIC,aAAJ;;AAEA,cAAIF,IAAID,mBAAR,EAA6BE,QAAQ,CAAR,CAA7B,KACK,IAAID,IAAIX,KAAR,EAAeY,QAAQ,EAAR,CAAf,KACA,IAAID,IAAI,MAAMF,gBAAd,EAAgCG,QAAQ,CAAR;;AAErC,cAAME,MAAM,IAAIlB,IAAJ,CAASW,CAAT,EAAYI,CAAZ,EAAeH,CAAf,CAAZ;AACA,cAAII,KAAJ,EAAWN,MAAMS,YAAN,CAAmBD,GAAnB,EAAwBF,KAAxB;AACX,cAAIC,IAAJ,EAAUP,MAAMU,YAAN,CAAmBF,GAAnB,EAAwBD,IAAxB;AACV;AACD;AACF;AACF;AACD,WAAOP,KAAP;AACD;AACD,SAAOL,aAAP;AACD;;AAEDgB,OAAOC,OAAP,GAAiBpB,UAAjB","file":"../../../lib/worldGenerations/nether.js","sourcesContent":["const Chunk = require('prismarine-chunk')(require(\"../version\"));\nconst Vec3 = require('vec3').Vec3;\nconst rand = require('random-seed');\n\nfunction generation({seed,level=50}={}) {\n  function generateChunk(chunkX, chunkZ) {\n    const seedRand = rand.create(seed+':'+chunkX+':'+chunkZ);\n    const chunk=new Chunk();\n    for (let x = 0; x < 16; x++) {\n      for (let z = 0; z < 16; z++) {\n        const bedrockheighttop = 1 + seedRand(4);\n        const bedrockheightbottom = 1 + seedRand(4);\n        for (let y = 0; y < 128; y++) { // Nether only goes up to 128\n          let block;\n          let data;\n\n          if (y < bedrockheightbottom) block = 7;\n          else if (y < level) block = 87;\n          else if (y > 127 - bedrockheighttop) block = 7;\n\n          const pos = new Vec3(x, y, z);\n          if (block) chunk.setBlockType(pos, block);\n          if (data) chunk.setBlockData(pos, data);\n          // Don't need to set light data in nether\n        }\n      }\n    }\n    return chunk;\n  }\n  return generateChunk;\n}\n\nmodule.exports = generation;"]}