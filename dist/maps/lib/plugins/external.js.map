{"version":3,"sources":["lib/plugins/external.js"],"names":["module","exports","server","serv","settings","plugins","pluginCount","externalPluginsLoaded","addPlugin","name","plugin","set","Error","id","player","entity","enabled","call","p","forEach","disabled","require","resolve","err","on","map","log","pluginData","getData","pluginName"],"mappings":"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","file":"../../../lib/plugins/external.js","sourcesContent":["module.exports.server = function(serv, settings) {\n  serv.plugins = {};\n  serv.pluginCount = 0;\n  serv.externalPluginsLoaded = false;\n\n  serv.addPlugin = (name, plugin, set) => {\n    if (!name || !plugin) throw new Error('You need a name and object for your plugin!');\n    serv.plugins[name] = {\n      id: serv.pluginCount,\n      name: name,\n      player: plugin.player,\n      entity: plugin.entity,\n      server: plugin.server,\n      settings: set,\n      enabled: true\n    };\n    serv.pluginCount++;\n    if (serv.externalPluginsLoaded && plugin.server) serv.plugins[name].server.call(p, serv, settings);\n  };\n\n  Object.keys(settings.plugins).forEach((p) =>{\n    if (settings.plugins[p].disabled) return;\n    try {\n      require.resolve(p); // Check if it exists, if not do catch, otherwise jump to bottom\n    } catch (err) {\n      try { // Throw error if cannot find plugin        \n        require.resolve('../../plugins/' + p);\n      } catch (err) {\n        throw new Error('Cannot find plugin \"' + p + '\"');\n      }\n      serv.addPlugin(p, require('../../plugins/' + p), settings.plugins[p]);\n      return;\n    }\n    serv.addPlugin(p, require(p), settings.plugins[p]);\n  });\n\n  Object.keys(serv.plugins).forEach((p) =>{\n    if (serv.plugins[p].server) serv.plugins[p].server.call(serv.plugins[p], serv, settings);\n  });\n\n  serv.on('asap', () => {\n    Object.keys(serv.plugins).map(p => serv.log('[PLUGINS] Loaded \"' + serv.plugins[p].name + '\"'));\n  });\n  \n  serv.externalPluginsLoaded = true;\n};\n\nmodule.exports.player = function(player, serv) {\n  Object.keys(serv.plugins).forEach(p => {\n    const plugin = serv.plugins[p];\n    if (plugin.player) plugin.player.call(plugin, player, serv);\n  });\n};\n\nmodule.exports.entity = function(entity, serv) {\n  entity.pluginData = {};\n\n  Object.keys(serv.plugins).forEach(p => {\n    entity.pluginData[p] = {};\n  });\n\n  entity.getData = (pluginName) => {\n    if (typeof pluginName == 'object') pluginName = pluginName.name;\n    return entity.pluginData[pluginName] || null;\n  };\n\n  Object.keys(serv.plugins).forEach(p => {\n    const plugin = serv.plugins[p];\n    if (plugin.entity) plugin.entity.call(plugin, entity, serv);\n  });\n};"]}