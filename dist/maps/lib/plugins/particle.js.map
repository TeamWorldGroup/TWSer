{"version":3,"sources":["lib/plugins/particle.js"],"names":["Vec3","require","module","exports","server","serv","emitParticle","particle","world","position","whitelist","blacklist","radius","longDistance","size","count","players","Array","getNearby","scaled","floored","_writeArray","particleId","x","y","z","offsetX","offsetY","offsetZ","particleData","particles","data","filter","indexOf","p","player","commands","add","base","info","usage","op","parse","str","results","match","parseInt","amount","action","chat","toString"],"mappings":";;AAAA,IAAMA,OAAOC,QAAQ,MAAR,EAAgBD,IAA7B;;AAEAE,OAAOC,OAAP,CAAeC,MAAf,GAAsB,UAASC,IAAT,EAAe;AACnCA,OAAKC,YAAL,GAAoB,UAACC,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,EAA0H;AAAA,mFAAP,EAAO;AAAA,QAA7FC,SAA6F,QAA7FA,SAA6F;AAAA,8BAAnFC,SAAmF;AAAA,QAAnFA,SAAmF,kCAAzE,EAAyE;AAAA,2BAAtEC,MAAsE;AAAA,QAAtEA,MAAsE,+BAA/D,KAAG,EAA4D;AAAA,iCAAzDC,YAAyD;AAAA,QAAzDA,YAAyD,qCAA5C,IAA4C;AAAA,yBAAvCC,IAAuC;AAAA,QAAvCA,IAAuC,6BAAlC,IAAId,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAkC;AAAA,0BAAhBe,KAAgB;AAAA,QAAhBA,KAAgB,8BAAV,CAAU;;AAC5I,QAAMC,UAAW,OAAON,SAAP,IAAoB,WAApB,GAAmCA,qBAAqBO,KAArB,GAA6BP,SAA7B,GAAyC,CAACA,SAAD,CAA5E,GAA2FL,KAAKa,SAAL,CAAe;AACzHV,aAAOA,KADkH;AAEzHC,gBAAUA,SAASU,MAAT,CAAgB,EAAhB,EAAoBC,OAApB,EAF+G;AAGzHR,cAAQA,MAHiH,CAG1G;AAH0G,KAAf,CAA5G;;AAMAP,SAAKgB,WAAL,CAAiB,iBAAjB,EAAoC;AAClCC,kBAAYf,QADsB;AAElCM,oBAAcA,YAFoB;AAGlCU,SAAGd,SAASc,CAHsB;AAIlCC,SAAGf,SAASe,CAJsB;AAKlCC,SAAGhB,SAASgB,CALsB;AAMlCC,eAASZ,KAAKS,CANoB;AAOlCI,eAASb,KAAKU,CAPoB;AAQlCI,eAASd,KAAKW,CARoB;AASlCI,oBAAc,GAToB;AAUlCC,iBAAWf,KAVuB;AAWlCgB,YAAM;AAX4B,KAApC,EAYGf,QAAQgB,MAAR,CAAe;AAAA,aAAKrB,UAAUsB,OAAV,CAAkBC,CAAlB,KAAwB,CAAC,CAA9B;AAAA,KAAf,CAZH;AAaD,GApBD;AAqBD,CAtBD;;AAwBAhC,OAAOC,OAAP,CAAegC,MAAf,GAAsB,UAASA,MAAT,EAAgB9B,IAAhB,EAAqB;AACzC8B,SAAOC,QAAP,CAAgBC,GAAhB,CAAoB;AAClBC,UAAM,UADY;AAElBC,UAAM,+BAFY;AAGlBC,WAAO,mDAHW;AAIlBC,QAAI,IAJc;AAKlBC,SALkB,iBAKZC,GALY,EAKP;AACT,UAAMC,UAAQD,IAAIE,KAAJ,CAAU,8DAAV,CAAd;AACA,UAAG,CAACD,OAAJ,EAAa,OAAO,KAAP;AACb,aAAO;AACLrC,kBAASuC,SAASF,QAAQ,CAAR,CAAT,CADJ;AAELG,gBAAOH,QAAQ,CAAR,IAAaE,SAASF,QAAQ,CAAR,CAAT,CAAb,GAAoC,CAFtC;AAGL9B,cAAK8B,QAAQ,CAAR,IAAa,IAAI5C,IAAJ,CAAS8C,SAASF,QAAQ,CAAR,CAAT,CAAT,EAA+BE,SAASF,QAAQ,CAAR,CAAT,CAA/B,EAAqDE,SAASF,QAAQ,CAAR,CAAT,CAArD,CAAb,GAA0F,IAAI5C,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf;AAH1F,OAAP;AAKD,KAbiB;AAclBgD,UAdkB,yBAca;AAAA,UAAvBzC,QAAuB,SAAvBA,QAAuB;AAAA,UAAdwC,MAAc,SAAdA,MAAc;AAAA,UAAPjC,IAAO,SAAPA,IAAO;;AAC7B,UAAIiC,UAAU,MAAd,EAAsB;AACpBZ,eAAOc,IAAP,CAAY,8CAAZ;AACA;AACD;AACDd,aAAOc,IAAP,CAAY,eAAe1C,QAAf,GAA0B,YAA1B,GAAyCwC,MAAzC,GAAkD,UAAlD,GAA+DjC,KAAKoC,QAAL,EAA/D,GAAiF,GAA7F;AACA7C,WAAKC,YAAL,CAAkBC,QAAlB,EAA4B4B,OAAO3B,KAAnC,EAA0C2B,OAAO1B,QAAP,CAAgBU,MAAhB,CAAuB,IAAE,EAAzB,CAA1C,EAAwE,EAACJ,OAAOgC,MAAR,EAAejC,MAAMA,IAArB,EAAxE;AACD;AArBiB,GAApB;AAuBD,CAxBD","file":"../../../lib/plugins/particle.js","sourcesContent":["const Vec3 = require(\"vec3\").Vec3;\n\nmodule.exports.server=function(serv) {\n  serv.emitParticle = (particle, world, position, {whitelist,blacklist=[],radius=32*32,longDistance=true,size=new Vec3(1, 1, 1),count=1}={}) => {\n    const players = (typeof whitelist != 'undefined' ? (whitelist instanceof Array ? whitelist : [whitelist]) : serv.getNearby({\n      world: world,\n      position: position.scaled(32).floored(),\n      radius: radius // 32 blocks, fixed position\n    }));\n\n    serv._writeArray('world_particles', {\n      particleId: particle,\n      longDistance: longDistance,\n      x: position.x,\n      y: position.y,\n      z: position.z,\n      offsetX: size.x,\n      offsetY: size.y,\n      offsetZ: size.z,\n      particleData: 1.0,\n      particles: count,\n      data: []\n    }, players.filter(p => blacklist.indexOf(p) == -1));\n  }\n};\n\nmodule.exports.player=function(player,serv){\n  player.commands.add({\n    base: 'particle',\n    info: 'emit a particle at a position',\n    usage: '/particle <id> [amount] [<sizeX> <sizeY> <sizeZ>]',\n    op: true,\n    parse(str) {\n      const results=str.match(/(\\d+)(?: (\\d+))?(?: (\\d+))?(?: (\\d+))?(?: (\\d+))?(?: (\\d+))?/);\n      if(!results) return false;\n      return {\n        particle:parseInt(results[1]),\n        amount:results[2] ? parseInt(results[2]) : 1,\n        size:results[5] ? new Vec3(parseInt(results[3]), parseInt(results[4]), parseInt(results[5])) : new Vec3(1, 1, 1)\n      };\n    },\n    action({particle,amount,size}) {\n      if (amount >= 100000) {\n        player.chat('You cannot emit more than 100,000 particles!');\n        return;\n      }\n      player.chat('Emitting \"' + particle + '\" (count: ' + amount + ', size: ' + size.toString() + ')');\n      serv.emitParticle(particle, player.world, player.position.scaled(1/32), {count: amount,size: size});\n    }\n  });\n};"]}