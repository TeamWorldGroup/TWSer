{"version":3,"sources":["lib/plugins/digging.js"],"names":["Vec3","require","module","exports","player","serv","location","clearInterval","animationInterval","diggingTime","Date","startDiggingTime","stop","expectedDiggingTime","behavior","start","time","position","block","currentlyDugBlock","dropBlock","blockDropPosition","offset","blockDropWorld","world","blockDropVelocity","Math","random","blockDropId","type","blockDropDamage","metadata","blockDropPickup","blockDropDeath","data","changeBlock","cancelDig","_client","write","completeDigging","sendBlock","on","status","face","pos","x","y","z","directionVector","directionToVector","facedPos","plus","getBlock","facedBlock","name","gameMode","startDigging","cancelDigging","creativeDigging","setTimeout","digTime","lastDestroyState","currentAnimationId","entityMaxId","updateAnimation","setInterval","currentDiggingTime","newDestroyState","floor","lastState","state","timePassed","_writeOthersNearby","spawnObject","velocity","itemId","itemDamage","pickupTime","deathTime"],"mappings":"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","file":"../../../lib/plugins/digging.js","sourcesContent":["const Vec3 = require(\"vec3\").Vec3;\n\nmodule.exports.player=function(player,serv)\n{\n\n  function cancelDig({position, block}) {\n    player.sendBlock(position, block.type, block.metadata);\n  }\n\n  player._client.on(\"block_dig\",async ({location,status,face}) => {\n    let pos=new Vec3(location.x,location.y,location.z);\n\n    const directionVector=directionToVector[face];\n    const facedPos=pos.plus(directionVector);\n\n    try {\n      const facedBlock = await player.world.getBlock(facedPos);\n      let block;\n      if(facedBlock.name==\"fire\")\n      {\n        block=facedBlock;\n        pos=facedPos;\n      }\n      else block=await player.world.getBlock(pos);\n\n      currentlyDugBlock = block;\n      if (currentlyDugBlock.type == 0) return;\n      if (status == 0 && player.gameMode != 1)\n        player.behavior('dig', { // Start dig survival\n          position: pos,\n          block: block\n        }, ({position}) => {\n          return startDigging(position);\n        }, cancelDig);\n      else if (status == 2)\n        completeDigging(pos);\n      else if (status == 1)\n        player.behavior('cancelDig', { // Cancel dig survival\n          position: pos,\n          block: block\n        }, ({position}) => {\n          return cancelDigging(position);\n        });\n      else if (status == 0 && player.gameMode == 1)\n        return creativeDigging(pos);\n    }\n    catch(err) {\n      setTimeout(() => {throw err;},0);\n    }\n  });\n\n  function diggingTime()\n  {\n    // assume holding nothing and usual conditions\n    return currentlyDugBlock.digTime();\n  }\n\n  let currentlyDugBlock;\n  let startDiggingTime;\n  let animationInterval;\n  let expectedDiggingTime;\n  let lastDestroyState;\n  let currentAnimationId;\n  function startDigging(location)\n  {\n    serv.entityMaxId++;\n    currentAnimationId=serv.entityMaxId;\n    expectedDiggingTime=diggingTime(location);\n    lastDestroyState=0;\n    startDiggingTime=new Date();\n    updateAnimation();\n    animationInterval=setInterval(updateAnimation,100);\n    function updateAnimation()\n    {\n      const currentDiggingTime=new Date()-startDiggingTime;\n      let newDestroyState=Math.floor(9*currentDiggingTime/expectedDiggingTime);\n      newDestroyState=newDestroyState>9 ? 9 : newDestroyState;\n      if(newDestroyState!=lastDestroyState)\n      {\n        player.behavior('breakAnimation', {\n          lastState: lastDestroyState,\n          state: newDestroyState,\n          start: startDigging,\n          timePassed: currentDiggingTime,\n          position: location\n        }, ({state}) => {\n          lastDestroyState=state;\n          player._writeOthersNearby(\"block_break_animation\",{\n            \"entityId\":currentAnimationId,\n            \"location\":location,\n            \"destroyStage\":state\n          });\n        })\n      }\n    }\n  }\n\n  function cancelDigging(location)\n  {\n    clearInterval(animationInterval);\n    player._writeOthersNearby(\"block_break_animation\",{\n      \"entityId\":currentAnimationId,\n      \"location\":location,\n      \"destroyStage\":-1\n    });\n  }\n\n  async function completeDigging(location)\n  {\n    clearInterval(animationInterval);\n    const diggingTime=new Date()-startDiggingTime;\n    let stop = false;\n    if(expectedDiggingTime-diggingTime<100) {\n      stop = player.behavior('forceCancelDig', {\n        stop: true,\n        start: startDiggingTime,\n        time: diggingTime\n      }).stop;\n    }\n    if(!stop) {\n      player.behavior('dug', {\n        position: location,\n        block: currentlyDugBlock,\n        dropBlock: true,\n        blockDropPosition: location.offset(0.5, 0.5, 0.5),\n        blockDropWorld: player.world,\n        blockDropVelocity: new Vec3(Math.random()*4 - 2, Math.random()*2 + 2, Math.random()*4 - 2),\n        blockDropId: currentlyDugBlock.type,\n        blockDropDamage: currentlyDugBlock.metadata,\n        blockDropPickup: 500,\n        blockDropDeath: 60*5*1000\n      }, (data) => {\n        player.changeBlock(data.position,0,0);\n        if (data.dropBlock) dropBlock(data);\n      }, cancelDig)\n    }\n    else\n    {\n      player._client.write(\"block_change\",{\n        location:location,\n        type:currentlyDugBlock.type<<4\n      });\n    }\n  }\n\n  function dropBlock({blockDropPosition, blockDropWorld, blockDropVelocity, blockDropId, blockDropDamage, blockDropPickup, blockDropDeath}) {\n    serv.spawnObject(2, blockDropWorld, blockDropPosition, {\n      velocity: blockDropVelocity,\n      itemId: blockDropId,\n      itemDamage: blockDropDamage,\n      pickupTime: blockDropPickup,\n      deathTime: blockDropDeath\n    });\n  }\n\n\n  function creativeDigging(location)\n  {\n    player.behavior('dug', {\n      position: location,\n      block: currentlyDugBlock,\n      dropBlock: false,\n      blockDropPosition: location.offset(0.5, 0.5, 0.5),\n      blockDropWorld: player.world,\n      blockDropVelocity: new Vec3(Math.random()*4 - 2, Math.random()*2 + 2, Math.random()*4 - 2),\n      blockDropId: currentlyDugBlock.type,\n      blockDropDamage: currentlyDugBlock.metadata,\n      blockDropPickup: 500,\n      blockDropDeath: 60*5*1000\n    }, (data) => {\n      player.changeBlock(data.position,0,0);\n      if (data.dropBlock) dropBlock(data);\n    }, cancelDig);\n  }\n\n};\n\nconst directionToVector=[new Vec3(0,-1,0),new Vec3(0,1,0),new Vec3(0,0,-1),new Vec3(0,0,1),new Vec3(-1,0,0),new Vec3(1,0,0)];"]}