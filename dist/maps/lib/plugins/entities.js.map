{"version":3,"sources":["lib/plugins/entities.js"],"names":["module","exports","server","serv","ticking","on","delta","all","entities","map","id","entity","deathTime","Date","now","bornTime","destroy","pickupTime","players","getNearby","world","position","radius","length","collect","velocity","size","calculatePhysics","posAndOnGround","type","sendPosition","onGround","then","catch","err","setTimeout","sendMetadata","data","_writeOthersNearby","entityId","metadata","setAndUpdateMetadata"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,OAAP,CAAeC,MAAf,GAAsB,UAASC,IAAT,EAAe;AACnC,MAAIC,UAAQ,KAAZ;AACAD,OAAKE,EAAL,CAAQ,MAAR,EAAgB,UAASC,KAAT,EAAgB;AAAA;;AAC9B,QAAGF,WAAWE,QAAM,CAApB,EACE;AACFF,cAAQ,IAAR;AACA,sBAAQG,GAAR,CACE,oBAAYJ,KAAKK,QAAjB,EAA2BC,GAA3B;AAAA,0FAA+B,iBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBC,sBADuB,GACdR,KAAKK,QAAL,CAAcE,EAAd,CADc;;AAAA,sBAEzBC,OAAOC,SAAP,IAAoBC,KAAKC,GAAL,KAAaH,OAAOI,QAApB,IAAgCJ,OAAOC,SAFlC;AAAA;AAAA;AAAA;;AAG3BD,uBAAOK,OAAP;AAH2B;;AAAA;AAKtB,oBAAIL,OAAOM,UAAP,IAAqBJ,KAAKC,GAAL,KAAaH,OAAOI,QAApB,IAAgCJ,OAAOM,UAAhE,EAA4E;AAC3EC,yBAD2E,GACjEf,KAAKgB,SAAL,CAAe;AAC7BC,2BAAOT,OAAOS,KADe;AAE7BC,8BAAUV,OAAOU,QAFY;AAG7BC,4BAAQ,MAAI,EAHiB,CAGd;AAHc,mBAAf,CADiE;;AAMjF,sBAAIJ,QAAQK,MAAZ,EAAoB;AAClBL,4BAAQ,CAAR,EAAWM,OAAX,CAAmBb,MAAnB;AACD;AACF;;AAd4B;AAAA,sBAezB,CAACA,OAAOc,QAAR,IAAoB,CAACd,OAAOe,IAfH;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,uBAgBAf,OAAOgB,gBAAP,CAAwBrB,KAAxB,CAhBA;;AAAA;AAgBvBsB,8BAhBuB;;AAiB7B,oBAAIjB,OAAOkB,IAAP,IAAe,KAAnB,EAA0BlB,OAAOmB,YAAP,CAAoBF,eAAeP,QAAnC,EAA6CO,eAAeG,QAA5D;;AAjBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA/B;;AAAA;AAAA;AAAA;AAAA,QADF,EAqBCC,IArBD,CAqBM;AAAA,aAAM5B,UAAQ,KAAd;AAAA,KArBN,EAsBC6B,KAtBD,CAsBO,UAACC,GAAD;AAAA,aAAQC,WAAW,YAAM;AAAC,cAAMD,GAAN;AAAW,OAA7B,EAA8B,CAA9B,CAAR;AAAA,KAtBP;AAuBD,GA3BD;AA4BD,CA9BD;;AAgCAlC,OAAOC,OAAP,CAAeU,MAAf,GAAsB,UAASA,MAAT,EAAgB;AACpCA,SAAOyB,YAAP,GAAsB,UAACC,IAAD,EAAU;AAC9B1B,WAAO2B,kBAAP,CAA0B,iBAA1B,EAA6C;AAC3CC,gBAAU5B,OAAOD,EAD0B;AAE3C8B,gBAAUH;AAFiC,KAA7C;AAID,GALD;;AAOA1B,SAAO8B,oBAAP,GAA8B,UAACJ,IAAD,EAAU;AACtC1B,WAAO6B,QAAP,GAAkBH,IAAlB;AACA1B,WAAOyB,YAAP,CAAoBC,IAApB;AACD,GAHD;AAID,CAZD","file":"../../../lib/plugins/entities.js","sourcesContent":["module.exports.server=function(serv) {\n  let ticking=false;\n  serv.on('tick', function(delta) {\n    if(ticking || delta>1)\n      return;\n    ticking=true;\n    Promise.all(\n      Object.keys(serv.entities).map(async (id) => {\n        const entity = serv.entities[id];\n        if (entity.deathTime && Date.now() - entity.bornTime >= entity.deathTime) {\n          entity.destroy();\n          return;\n        } else if (entity.pickupTime && Date.now() - entity.bornTime >= entity.pickupTime) {\n          const players = serv.getNearby({\n            world: entity.world,\n            position: entity.position,\n            radius: 1.5*32 // Seems good for now\n          });\n          if (players.length) {\n            players[0].collect(entity);\n          }\n        }\n        if (!entity.velocity || !entity.size) return;\n        const posAndOnGround = await entity.calculatePhysics(delta);\n        if (entity.type == 'mob') entity.sendPosition(posAndOnGround.position, posAndOnGround.onGround);\n      })\n    )\n    .then(() => ticking=false)\n    .catch((err)=> setTimeout(() => {throw err;},0));\n  });\n};\n\nmodule.exports.entity=function(entity){\n  entity.sendMetadata = (data) => {\n    entity._writeOthersNearby('entity_metadata', {\n      entityId: entity.id,\n      metadata: data\n    });\n  };\n\n  entity.setAndUpdateMetadata = (data) => {\n    entity.metadata = data;\n    entity.sendMetadata(data);\n  };\n};"]}