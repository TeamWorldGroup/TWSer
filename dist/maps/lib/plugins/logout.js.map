{"version":3,"sources":["lib/plugins/logout.js"],"names":["once","require","module","exports","server","serv","quit","reason","all","players","map","player","kick","_server","close","despawnEntities","_client","write","entities","e","id","on","username","broadcast","color","yellow","_writeOthers","action","data","UUID","uuid","nearbyPlayers","forEach","otherPlayer","emit","index","indexOf","splice","uuidToPlayer"],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAMA,OAAOC,QAAQ,eAAR,CAAb;;AAEAC,OAAOC,OAAP,CAAeC,MAAf,GAAsB,UAASC,IAAT,EACtB;AAAA;;AACEA,OAAKC,IAAL,4EAAU;AAAA,QAAMC,MAAN,uEAAa,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACF,kBAAQC,GAAR,CAAYH,KAAKI,OAAL,CAAaC,GAAb,CAAiB,UAACC,MAAD,EAAY;AAC7CA,qBAAOC,IAAP,CAAYL,MAAZ;AACA,qBAAOP,KAAKW,MAAL,EAAY,cAAZ,CAAP;AACD,aAHiB,CAAZ,CADE;;AAAA;AAKRN,iBAAKQ,OAAL,CAAaC,KAAb;AALQ;AAAA,mBAMFd,KAAKK,KAAKQ,OAAV,EAAkB,OAAlB,CANE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;AAQD,CAVD;;AAYAX,OAAOC,OAAP,CAAeQ,MAAf,GAAsB,UAASA,MAAT,EAAgBN,IAAhB,EACtB;AACEM,SAAOI,eAAP,GAAyB;AAAA,WAAYJ,OAAOK,OAAP,CAAeC,KAAf,CAAqB,gBAArB,EAAuC;AAC1E,mBAAaC,SAASR,GAAT,CAAa;AAAA,eAAKS,EAAEC,EAAP;AAAA,OAAb;AAD6D,KAAvC,CAAZ;AAAA,GAAzB;;AAIAT,SAAOK,OAAP,CAAeK,EAAf,CAAkB,KAAlB,EAAyB,YAAM;AAC7B,QAAGV,UAAUA,OAAOW,QAApB,EAA8B;AAC5BjB,WAAKkB,SAAL,CAAelB,KAAKmB,KAAL,CAAWC,MAAX,GAAoBd,OAAOW,QAA3B,GAAsC,iBAArD;AACAX,aAAOe,YAAP,CAAoB,aAApB,EAAmC;AACjCC,gBAAQ,CADyB;AAEjCC,cAAM,CAAC;AACLC,gBAAMlB,OAAOK,OAAP,CAAec;AADhB,SAAD;AAF2B,OAAnC;AAMAnB,aAAOoB,aAAP,GAAuBC,OAAvB,CAA+B;AAAA,eAAeC,YAAYlB,eAAZ,CAA4B,CAACJ,MAAD,CAA5B,CAAf;AAAA,OAA/B;AACA,aAAON,KAAKa,QAAL,CAAcP,OAAOS,EAArB,CAAP;AACAT,aAAOuB,IAAP,CAAY,cAAZ;AACA,UAAMC,QAAQ9B,KAAKI,OAAL,CAAa2B,OAAb,CAAqBzB,MAArB,CAAd;AACA,UAAIwB,QAAQ,CAAC,CAAb,EAAgB;AACd9B,aAAKI,OAAL,CAAa4B,MAAb,CAAoBF,KAApB,EAA2B,CAA3B;AACD;AACD,aAAO9B,KAAKiC,YAAL,CAAkB3B,OAAOK,OAAP,CAAec,IAAjC,CAAP;AACD;AACF,GAlBD;AAmBD,CAzBD","file":"../../../lib/plugins/logout.js","sourcesContent":["const once = require('event-promise');\n\nmodule.exports.server=function(serv)\n{\n  serv.quit=async(reason=\"Going down\") => {\n    await Promise.all(serv.players.map((player) => {\n      player.kick(reason);\n      return once(player,'disconnected');\n    }));\n    serv._server.close();\n    await once(serv._server,\"close\");\n  };\n};\n\nmodule.exports.player=function(player,serv)\n{\n  player.despawnEntities = entities => player._client.write('entity_destroy', {\n    'entityIds': entities.map(e => e.id)\n  });\n\n  player._client.on('end', () => {\n    if(player && player.username) {\n      serv.broadcast(serv.color.yellow + player.username + ' quit the game.');\n      player._writeOthers('player_info', {\n        action: 4,\n        data: [{\n          UUID: player._client.uuid\n        }]\n      });\n      player.nearbyPlayers().forEach(otherPlayer => otherPlayer.despawnEntities([player]));\n      delete serv.entities[player.id];\n      player.emit('disconnected');\n      const index = serv.players.indexOf(player);\n      if (index > -1) {\n        serv.players.splice(index, 1);\n      }\n      delete serv.uuidToPlayer[player._client.uuid];\n    }\n  });\n};"]}