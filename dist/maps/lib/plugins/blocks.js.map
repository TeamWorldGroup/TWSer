{"version":3,"sources":["lib/plugins/blocks.js"],"names":["Vec3","require","module","exports","player","serv","changeBlock","position","blockType","blockData","players","filter","p","world","forEach","sendBlock","setBlockType","setBlockData","behavior","_client","write","location","type","setBlock","commands","add","base","info","usage","op","parse","str","results","match","action","params","res","slice","map","val","i","posFromString","floored"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,OAAOC,QAAQ,MAAR,EAAgBD,IAA7B;;AAEAE,OAAOC,OAAP,CAAeC,MAAf,GAAsB,UAASA,MAAT,EAAgBC,IAAhB,EACtB;AAAA;;AACED,SAAOE,WAAP;AAAA,wFAAmB,iBAAOC,QAAP,EAAgBC,SAAhB,EAA0BC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAEjBJ,mBAAKK,OAAL,CACGC,MADH,CACU;AAAA,uBAAKC,EAAEC,KAAF,IAAST,OAAOS,KAAhB,IAAyBT,UAAQQ,CAAtC;AAAA,eADV,EAEGE,OAFH,CAEW;AAAA,uBAAKF,EAAEG,SAAF,CAAYR,QAAZ,EAAsBC,SAAtB,EAAiCC,SAAjC,CAAL;AAAA,eAFX;;AAFiB;AAAA,qBAMXL,OAAOS,KAAP,CAAaG,YAAb,CAA0BT,QAA1B,EAAmCC,SAAnC,CANW;;AAAA;AAAA;AAAA,qBAOXJ,OAAOS,KAAP,CAAaI,YAAb,CAA0BV,QAA1B,EAAmCE,SAAnC,CAPW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnB;;AAAA;AAAA;AAAA;AAAA;;AAUAL,SAAOW,SAAP,GAAmB,UAACR,QAAD,EAAWC,SAAX,EAAsBC,SAAtB;AAAA,WAAqC;AACtDL,aAAOc,QAAP,CAAgB,WAAhB,EAA6B;AAC3BX,kBAAUA,QADiB;AAE3BC,mBAAWA,SAFgB;AAG3BC,mBAAWA;AAHgB,OAA7B,EAIG,iBAAsC;AAAA,YAApCF,QAAoC,SAApCA,QAAoC;AAAA,YAA1BC,SAA0B,SAA1BA,SAA0B;AAAA,YAAfC,SAAe,SAAfA,SAAe;;AACvCL,eAAOe,OAAP,CAAeC,KAAf,CAAqB,cAArB,EAAoC;AAClCC,oBAASd,QADyB;AAElCe,gBAAKd,aAAW,CAAX,GAAeC;AAFc,SAApC;AAID,OATD;AADiB;AAAA,GAAnB;;AAaAL,SAAOmB,QAAP,GAAkB,UAAChB,QAAD,EAAUC,SAAV,EAAoBC,SAApB;AAAA,WAAkCJ,KAAKkB,QAAL,CAAcnB,OAAOS,KAArB,EAA2BN,QAA3B,EAAoCC,SAApC,EAA8CC,SAA9C,CAAlC;AAAA,GAAlB;;AAGAL,SAAOoB,QAAP,CAAgBC,GAAhB,CAAoB;AAClBC,UAAM,UADY;AAElBC,UAAM,2BAFY;AAGlBC,WAAO,mCAHW;AAIlBC,QAAI,IAJc;AAKlBC,SALkB,iBAKZC,GALY,EAKP;AACT,UAAMC,UAAUD,IAAIE,KAAJ,CAAU,8EAAV,CAAhB;AACA,UAAG,CAACD,OAAJ,EAAa,OAAO,KAAP;AACb,aAAOA,OAAP;AACD,KATiB;AAUlBE,UAVkB,kBAUXC,MAVW,EAUH;AACb,UAAIC,MAAMD,OAAOE,KAAP,CAAa,CAAb,EAAgB,CAAhB,CAAV;AACAD,YAAMA,IAAIE,GAAJ,CAAQ,UAACC,GAAD,EAAMC,CAAN;AAAA,eAAYnC,KAAKoC,aAAL,CAAmBF,GAAnB,EAAwBnC,OAAOG,QAAP,CAAgB,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAciC,CAAd,CAAhB,IAAoC,EAA5D,CAAZ;AAAA,OAAR,CAAN;AACApC,aAAOmB,QAAP,CAAgB,IAAIvB,IAAJ,CAASoC,IAAI,CAAJ,CAAT,EAAiBA,IAAI,CAAJ,CAAjB,EAAyBA,IAAI,CAAJ,CAAzB,EAAiCM,OAAjC,EAAhB,EAA4DP,OAAO,CAAP,CAA5D,EAAuEA,OAAO,CAAP,KAAa,CAApF;AACD;AAdiB,GAApB;AAgBD,CA5CD","file":"../../../lib/plugins/blocks.js","sourcesContent":["const Vec3 = require(\"vec3\").Vec3;\n\nmodule.exports.player=function(player,serv)\n{\n  player.changeBlock=async (position,blockType,blockData) =>\n  {\n    serv.players\n      .filter(p => p.world==player.world && player!=p)\n      .forEach(p => p.sendBlock(position, blockType, blockData));\n\n    await player.world.setBlockType(position,blockType);\n    await player.world.setBlockData(position,blockData);\n  };\n  \n  player.sendBlock = (position, blockType, blockData) =>  // Call from player.setBlock unless you want \"local\" fake blocks\n    player.behavior('sendBlock', {\n      position: position,\n      blockType: blockType,\n      blockData: blockData\n    }, ({position, blockType, blockData}) => {\n      player._client.write(\"block_change\",{\n        location:position,\n        type:blockType<<4 | blockData\n      });\n    });\n    \n\n  player.setBlock = (position,blockType,blockData) => serv.setBlock(player.world,position,blockType,blockData);\n\n\n  player.commands.add({\n    base: 'setblock',\n    info: 'set a block at a position',\n    usage: '/setblock <x> <y> <z> <id> [data]',\n    op: true,\n    parse(str) {\n      const results = str.match(/^(~|~?-?[0-9]+) (~|~?-?[0-9]+) (~|~?-?[0-9]+) ([0-9]{1,3})(?: ([0-9]{1,3}))?/);\n      if(!results) return false;\n      return results;\n    },\n    action(params) {\n      let res = params.slice(1, 4);\n      res = res.map((val, i) => serv.posFromString(val, player.position[['x','y','z'][i]] / 32));\n      player.setBlock(new Vec3(res[0], res[1], res[2]).floored(), params[4], params[5] || 0);\n    }\n  });\n};"]}