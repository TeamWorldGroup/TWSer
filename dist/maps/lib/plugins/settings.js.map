{"version":3,"sources":["lib/plugins/settings.js"],"names":["Vec3","require","randomInt","low","high","Math","floor","random","module","exports","server","serv","settings","world","initialPoint","point","getBlockType","offset","p","findSpawnZone","gameMode","difficulty","getSpawnPoint","player","findSpawnPoint","spawnPoint","_client","on","viewDistance","view"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,OAAOC,QAAQ,MAAR,EAAgBD,IAA7B;;AAGA,SAASE,SAAT,CAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AAC7B,SAAOC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBH,OAAOD,GAAxB,IAA+BA,GAA1C,CAAP;AACD;;AAEDK,OAAOC,OAAP,CAAeC,MAAf,GAAsB,UAASC,IAAT,EAAcC,QAAd,EACtB;AAAA;;AAAA;AAAA,wFAIE,iBAA6BC,KAA7B,EAAmCC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEMC,mBAFN,GAEYD,YAFZ;;AAAA;AAAA;AAAA,qBAGgBD,MAAMG,YAAN,CAAmBD,KAAnB,CAHhB;;AAAA;AAAA;;AAAA,mCAG6C,CAH7C;AAAA;AAAA;AAAA;;AAIIA,sBAAMA,MAAME,MAAN,CAAa,CAAb,EAAe,CAAC,CAAhB,EAAkB,CAAlB,CAAN;AAJJ;AAAA;;AAAA;AAAA,mBAKQ,IALR;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAOkBJ,MAAMG,YAAN,CAAmBD,KAAnB,CAPlB;;AAAA;AAOUG,eAPV;;AAAA,oBAQOA,KAAG,CAAH,IAAQA,KAAG,CARlB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAUIH,sBAAMA,MAAME,MAAN,CAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,CAAN;AAVJ;AAAA;;AAAA;AAAA;AAAA,qBAYeJ,MAAMG,YAAN,CAAmBD,KAAnB,CAZf;;AAAA;AAAA;;AAAA,mCAY2C,CAZ3C;AAAA;AAAA;AAAA;;AAaIA,sBAAQA,MAAME,MAAN,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAR;;AAbJ;AAAA;;AAAA;AAAA,+CAeSF,KAfT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJF;;AAAA,oBAIiBI,aAJjB;AAAA;AAAA;AAAA;;AACER,OAAKS,QAAL,GAAcR,SAASQ,QAAvB;AACAT,OAAKU,UAAL,GAAgBT,SAASS,UAAzB;;AAoBAV,OAAKW,aAAL;AAAA,yFAAqB,kBAAOT,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACJM,cAAcN,KAAd,EAAoB,IAAIb,IAAJ,CAASE,UAAU,CAAV,EAAY,EAAZ,CAAT,EAAyB,EAAzB,EAA4BA,UAAU,CAAV,EAAY,EAAZ,CAA5B,CAApB,CADI;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArB;;AAAA;AAAA;AAAA;AAAA;AAGD,CA1BD;;AA6BAM,OAAOC,OAAP,CAAec,MAAf;AAAA,uFAAsB,kBAAeA,MAAf,EAAsBZ,IAAtB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEpBY,mBAAOH,QAAP,GAAgBT,KAAKS,QAArB;AACAG,mBAAOC,cAAP,4EAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACIb,KAAKW,aAAL,CAAmBC,OAAOV,KAA1B,CADJ;;AAAA;AACpBU,6BAAOE,UADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAtB;AAGAF,mBAAOG,OAAP,CAAeC,EAAf,CAAkB,UAAlB,EAA6B,iBAAoB;AAAA,kBAAlBC,YAAkB,SAAlBA,YAAkB;;AAC/CL,qBAAOM,IAAP,GAAYD,YAAZ;AACD,aAFD;;AANoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA","file":"../../../lib/plugins/settings.js","sourcesContent":["const Vec3 = require(\"vec3\").Vec3;\n\n\nfunction randomInt (low, high) {\n  return Math.floor(Math.random() * (high - low) + low);\n}\n\nmodule.exports.server=function(serv,settings)\n{\n  serv.gameMode=settings.gameMode;\n  serv.difficulty=settings.difficulty;\n\n  async function findSpawnZone(world,initialPoint)\n  {\n    let point=initialPoint;\n    while((await (world.getBlockType(point)))==0)\n      point=point.offset(0,-1,0);\n    while(true)\n    {\n      const p=await world.getBlockType(point);\n      if(p!=8 && p!=9)\n        break;\n      point=point.offset(1,0,0);\n    }\n    while((await world.getBlockType(point))!=0)\n      point = point.offset(0, 1, 0);\n\n    return point;\n  }\n\n  serv.getSpawnPoint = async (world) =>  {\n      return await findSpawnZone(world,new Vec3(randomInt(0,30),81,randomInt(0,30)));\n  };\n};\n\n\nmodule.exports.player=async function(player,serv)\n{\n  player.gameMode=serv.gameMode;\n  player.findSpawnPoint=async () => {\n    player.spawnPoint=await serv.getSpawnPoint(player.world);\n  };\n  player._client.on('settings',({viewDistance}) => {\n    player.view=viewDistance;\n  });\n};\n"]}