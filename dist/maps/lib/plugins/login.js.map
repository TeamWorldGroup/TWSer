{"version":3,"sources":["lib/plugins/login.js"],"names":["Vec3","require","path","requireIndex","plugins","join","__dirname","Command","module","exports","server","serv","options","_server","on","client","emit","error","socket","listeners","length","player","initEntity","overworld","_client","profileProperties","profile","properties","commands","filter","pluginName","undefined","forEach","login","setTimeout","settings","addPlayer","type","health","food","crouching","op","username","players","push","uuidToPlayer","uuid","heldItemSlot","loadedChunks","sendLogin","write","entityId","id","levelType","gameMode","dimension","difficulty","reducedDebugInfo","maxPlayers","position","spawnPoint","toFixedPosition","sendChunkWhenMove","sendingChunks","distanceTo","lastPositionChunkUpdated","sendRestMap","updateTime","age","time","setGameMode","reason","_writeAll","action","data","UUID","gamemode","sendAbilities","fillTabList","_writeOthers","name","ping","latency","map","otherPlayer","setInterval","announceJoin","broadcast","color","yellow","waitPlayerLogin","events","resolve","listener","removeListener","event","bannedPlayers","kick","bannedIPs","remoteAddress","findSpawnPoint","sendMap","sendSpawnPosition","sendSelfPosition","updateHealth","updateAndSpawn"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,OAAOC,QAAQ,MAAR,EAAgBD,IAA7B;;AAEA,IAAME,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,eAAeF,QAAQ,cAAR,CAArB;AACA,IAAMG,UAAUD,aAAaD,KAAKG,IAAL,CAAUC,SAAV,EAAoB,IAApB,EAA0B,SAA1B,CAAb,CAAhB;AACA,IAAMC,UAAUN,QAAQ,cAAR,EAAwBM,OAAxC;;AAEAC,OAAOC,OAAP,CAAeC,MAAf,GAAsB,UAASC,IAAT,EAAcC,OAAd,EACtB;AAAA;;AACED,OAAKE,OAAL,CAAaC,EAAb,CAAgB,YAAhB,EAA8B;AAAA,WAC5BC,OAAOD,EAAP,CAAU,OAAV,EAAkB;AAAA,aAASH,KAAKK,IAAL,CAAU,aAAV,EAAwBD,MAAxB,EAA+BE,KAA/B,CAAT;AAAA,KAAlB,CAD4B;AAAA,GAA9B;;AAGAN,OAAKE,OAAL,CAAaC,EAAb,CAAgB,OAAhB;AAAA,wFAAyB,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACpBA,OAAOG,MAAP,CAAcC,SAAd,CAAwB,KAAxB,EAA+BC,MAA/B,IAAuC,CADnB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAGfC,oBAHe,GAGNV,KAAKW,UAAL,CAAgB,QAAhB,EAA0B,IAA1B,EAAgCX,KAAKY,SAArC,EAAgD,IAAIvB,IAAJ,CAAS,CAAT,EAAW,CAAX,EAAa,CAAb,CAAhD,CAHM;;AAIrBqB,qBAAOG,OAAP,GAAeT,MAAf;;AAEAM,qBAAOI,iBAAP,GAAyBJ,OAAOG,OAAP,CAAeE,OAAf,GAAyBL,OAAOG,OAAP,CAAeE,OAAf,CAAuBC,UAAhD,GAA6D,EAAtF;AACAN,qBAAOO,QAAP,GAAkB,IAAIrB,OAAJ,CAAY,EAAZ,CAAlB;AACA,kCAAYH,OAAZ,EACGyB,MADH,CACU;AAAA,uBAAczB,QAAQ0B,UAAR,EAAoBT,MAApB,IAA4BU,SAA1C;AAAA,eADV,EAEGC,OAFH,CAEW;AAAA,uBAAc5B,QAAQ0B,UAAR,EAAoBT,MAApB,CAA2BA,MAA3B,EAAmCV,IAAnC,EAAyCC,OAAzC,CAAd;AAAA,eAFX;;AAIAD,mBAAKK,IAAL,CAAU,WAAV,EAAsBK,MAAtB;AACAA,qBAAOL,IAAP,CAAY,MAAZ;AAbqB;AAAA,qBAcfK,OAAOY,KAAP,EAde;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAiBrBC,yBAAW,YAAM;AAAC;AAAW,eAA7B,EAA8B,CAA9B;;AAjBqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAzB;;AAAA;AAAA;AAAA;AAAA;AAoBD,CAzBD;;AA2BA1B,OAAOC,OAAP,CAAeY,MAAf,GAAsB,UAASA,MAAT,EAAgBV,IAAhB,EAAqBwB,QAArB,EACtB;AAAA;;AACE,WAASC,SAAT,GACA;AACEf,WAAOgB,IAAP,GAAc,QAAd;AACAhB,WAAOiB,MAAP,GAAgB,EAAhB;AACAjB,WAAOkB,IAAP,GAAc,EAAd;AACAlB,WAAOmB,SAAP,GAAmB,KAAnB,CAJF,CAI4B;AAC1BnB,WAAOoB,EAAP,GAAYN,SAAS,cAAT,CAAZ,CALF,CAKwC;AACtCd,WAAOqB,QAAP,GAAgBrB,OAAOG,OAAP,CAAekB,QAA/B;AACA/B,SAAKgC,OAAL,CAAaC,IAAb,CAAkBvB,MAAlB;AACAV,SAAKkC,YAAL,CAAkBxB,OAAOG,OAAP,CAAesB,IAAjC,IAAyCzB,MAAzC;AACAA,WAAO0B,YAAP,GAAoB,EAApB;AACA1B,WAAO2B,YAAP,GAAoB,EAApB;AACD;;AAED,WAASC,SAAT,GACA;AACE;AACA5B,WAAOG,OAAP,CAAe0B,KAAf,CAAqB,OAArB,EAA8B;AAC5BC,gBAAU9B,OAAO+B,EADW;AAE5BC,iBAAW,SAFiB;AAG5BC,gBAAUjC,OAAOiC,QAHW;AAI5BC,iBAAW,CAJiB;AAK5BC,kBAAY7C,KAAK6C,UALW;AAM5BC,wBAAkB,KANU;AAO5BC,kBAAY/C,KAAKE,OAAL,CAAa6C;AAPG,KAA9B;AASArC,WAAOsC,QAAP,GAAgBtC,OAAOuC,UAAP,CAAkBC,eAAlB,EAAhB;AACD;;AAED,WAASC,iBAAT,GACA;AACEzC,WAAOP,EAAP,CAAU,MAAV,EAAkB,YAAM;AACtB,UAAG,CAACO,OAAO0C,aAAR,IAAyB1C,OAAOsC,QAAP,CAAgBK,UAAhB,CAA2B3C,OAAO4C,wBAAlC,IAA4D,KAAG,EAA3F,EACE5C,OAAO6C,WAAP;AACH,KAHD;AAID;;AAED,WAASC,UAAT,GACA;AACE9C,WAAOG,OAAP,CAAe0B,KAAf,CAAqB,aAArB,EAAoC;AAClCkB,WAAK,CAAC,CAAD,EAAI,CAAJ,CAD6B;AAElCC,YAAM,CAAC,CAAD,EAAI1D,KAAK0D,IAAT;AAF4B,KAApC;AAID;;AAEDhD,SAAOiD,WAAP,GAAqB,oBACrB;AACEjD,WAAOiC,QAAP,GAAgBA,QAAhB;AACAjC,WAAOG,OAAP,CAAe0B,KAAf,CAAqB,mBAArB,EAA0C;AACxCqB,cAAQ,CADgC;AAExCjB,gBAAUjC,OAAOiC;AAFuB,KAA1C;AAIA3C,SAAK6D,SAAL,CAAe,aAAf,EAA6B;AAC3BC,cAAQ,CADmB;AAE3BC,YAAM,CAAC;AACLC,cAAMtD,OAAOG,OAAP,CAAesB,IADhB;AAEL8B,kBAAUvD,OAAOiC;AAFZ,OAAD;AAFqB,KAA7B;AAOAjC,WAAOwD,aAAP;AACD,GAfD;;AAiBA,WAASC,WAAT,GACA;AACEzD,WAAO0D,YAAP,CAAoB,aAApB,EAAkC;AAChCN,cAAQ,CADwB;AAEhCC,YAAM,CAAC;AACLC,cAAMtD,OAAOG,OAAP,CAAesB,IADhB;AAELkC,cAAM3D,OAAOqB,QAFR;AAGLf,oBAAYN,OAAOI,iBAHd;AAILmD,kBAAUvD,OAAOiC,QAJZ;AAKL2B,cAAM5D,OAAOG,OAAP,CAAe0D;AALhB,OAAD;AAF0B,KAAlC;;AAWA7D,WAAOG,OAAP,CAAe0B,KAAf,CAAqB,aAArB,EAAoC;AAClCuB,cAAQ,CAD0B;AAElCC,YAAM/D,KAAKgC,OAAL,CAAawC,GAAb,CAAiB,UAACC,WAAD;AAAA,eAAkB;AACvCT,gBAAMS,YAAY5D,OAAZ,CAAoBsB,IADa;AAEvCkC,gBAAMI,YAAY1C,QAFqB;AAGvCf,sBAAYyD,YAAY3D,iBAHe;AAIvCmD,oBAAUQ,YAAY9B,QAJiB;AAKvC2B,gBAAMG,YAAY5D,OAAZ,CAAoB0D;AALa,SAAlB;AAAA,OAAjB;AAF4B,KAApC;AAUAG,gBAAY;AAAA,aAAMhE,OAAOG,OAAP,CAAe0B,KAAf,CAAqB,aAArB,EAAmC;AACnDuB,gBAAO,CAD4C;AAEnDC,cAAK/D,KAAKgC,OAAL,CAAawC,GAAb,CAAiB;AAAA,iBAAgB;AACpCR,kBAAMS,YAAY5D,OAAZ,CAAoBsB,IADU;AAEpCmC,kBAAKG,YAAY5D,OAAZ,CAAoB0D;AAFW,WAAhB;AAAA,SAAjB;AAF8C,OAAnC,CAAN;AAAA,KAAZ,EAMG,IANH;AAOD;;AAED,WAASI,YAAT,GACA;AACE3E,SAAK4E,SAAL,CAAe5E,KAAK6E,KAAL,CAAWC,MAAX,GAAoBpE,OAAOqB,QAA3B,GAAsC,mBAArD;AACArB,WAAOL,IAAP,CAAY,WAAZ;AACD;;AAEDK,SAAOqE,eAAP,GAAyB,YAAM;AAC7B,QAAMC,SAAO,CAAC,QAAD,EAAU,MAAV,CAAb;AACA,WAAO,sBAAY,UAASC,OAAT,EAAiB;;AAElC,UAAMC,WAAS,SAATA,QAAS,GAAK;AAClBF,eAAOR,GAAP,CAAW;AAAA,iBAAS9D,OAAOG,OAAP,CAAesE,cAAf,CAA8BC,KAA9B,EAAoCF,QAApC,CAAT;AAAA,SAAX;AACAD;AACD,OAHD;AAIAD,aAAOR,GAAP,CAAW;AAAA,eAAQ9D,OAAOG,OAAP,CAAeV,EAAf,CAAkBiF,KAAlB,EAAwBF,QAAxB,CAAR;AAAA,OAAX;AACD,KAPM,CAAP;AAQD,GAVD;;AAaAxE,SAAOY,KAAP,4EAAe;AAAA;AAAA;AAAA;AAAA;AAEb,gBAAItB,KAAKkC,YAAL,CAAkBxB,OAAOG,OAAP,CAAesB,IAAjC,CAAJ,EAA4C;AAC1C;AACA;AACD;;AALY,iBAMTnC,KAAKqF,aAAL,CAAmB3E,OAAOG,OAAP,CAAesB,IAAlC,CANS;AAAA;AAAA;AAAA;;AAOXzB,mBAAO4E,IAAP,CAAYtF,KAAKqF,aAAL,CAAmB3E,OAAOG,OAAP,CAAesB,IAAlC,EAAwCyB,MAApD;AAPW;;AAAA;AAAA,iBAUV5D,KAAKuF,SAAL,CAAe7E,OAAOG,OAAP,CAAeN,MAAf,CAAsBiF,aAArC,CAVU;AAAA;AAAA;AAAA;;AAWT9E,mBAAO4E,IAAP,CAAYtF,KAAKuF,SAAL,CAAe7E,OAAOG,OAAP,CAAeN,MAAf,CAAsBiF,aAArC,EAAoD5B,MAAhE;AAXS;;AAAA;;AAebnC;AAfa;AAAA,mBAgBPf,OAAO+E,cAAP,EAhBO;;AAAA;AAiBbnD;AAjBa;AAAA,mBAkBP5B,OAAOgF,OAAP,EAlBO;;AAAA;AAmBbhF,mBAAOiF,iBAAP;AACAjF,mBAAOkF,gBAAP;AACAlF,mBAAOmF,YAAP,CAAoBnF,OAAOiB,MAA3B;AACAjB,mBAAOwD,aAAP;;AAGAV;AACAW;AACAzD,mBAAOoF,cAAP;;AAEAnB;AACAjE,mBAAOL,IAAP,CAAY,SAAZ;;AA9Ba;AAAA,mBAgCPK,OAAOqE,eAAP,EAhCO;;AAAA;AAiCbrE,mBAAO6C,WAAP;AACAJ;;AAlCa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;AAoCD,CAvJD","file":"../../../lib/plugins/login.js","sourcesContent":["const Vec3 = require(\"vec3\").Vec3;\n\nconst path = require('path');\nconst requireIndex = require('requireindex');\nconst plugins = requireIndex(path.join(__dirname,'..', 'plugins'));\nconst Command = require('flying-squid').Command;\n\nmodule.exports.server=function(serv,options)\n{\n  serv._server.on('connection', client =>\n    client.on('error',error => serv.emit('clientError',client,error)));\n\n  serv._server.on('login', async (client) => {\n    if(client.socket.listeners('end').length==0) return; // TODO: should be fixed properly in nmp instead\n    try {\n      const player = serv.initEntity('player', null, serv.overworld, new Vec3(0,0,0));\n      player._client=client;\n\n      player.profileProperties=player._client.profile ? player._client.profile.properties : [];\n      player.commands = new Command({});\n      Object.keys(plugins)\n        .filter(pluginName => plugins[pluginName].player!=undefined)\n        .forEach(pluginName => plugins[pluginName].player(player, serv, options));\n\n      serv.emit(\"newPlayer\",player);\n      player.emit('asap');\n      await player.login();\n    }\n    catch(err){\n      setTimeout(() => {throw err;},0)\n    }\n  });\n};\n\nmodule.exports.player=function(player,serv,settings)\n{\n  function addPlayer()\n  {\n    player.type = 'player';\n    player.health = 20;\n    player.food = 20;\n    player.crouching = false; // Needs added in prismarine-entity later\n    player.op = settings[\"everybody-op\"]; // REMOVE THIS WHEN OUT OF TESTING\n    player.username=player._client.username;\n    serv.players.push(player);\n    serv.uuidToPlayer[player._client.uuid] = player;\n    player.heldItemSlot=36;\n    player.loadedChunks={};\n  }\n\n  function sendLogin()\n  {\n    // send init data so client will start rendering world\n    player._client.write('login', {\n      entityId: player.id,\n      levelType: 'default',\n      gameMode: player.gameMode,\n      dimension: 0,\n      difficulty: serv.difficulty,\n      reducedDebugInfo: false,\n      maxPlayers: serv._server.maxPlayers\n    });\n    player.position=player.spawnPoint.toFixedPosition();\n  }\n\n  function sendChunkWhenMove()\n  {\n    player.on(\"move\", () => {\n      if(!player.sendingChunks && player.position.distanceTo(player.lastPositionChunkUpdated)>16*32)\n        player.sendRestMap();\n    });\n  }\n\n  function updateTime()\n  {\n    player._client.write('update_time', {\n      age: [0, 0],\n      time: [0, serv.time]\n    });\n  }\n\n  player.setGameMode = gameMode =>\n  {\n    player.gameMode=gameMode;\n    player._client.write('game_state_change', {\n      reason: 3,\n      gameMode: player.gameMode\n    });\n    serv._writeAll('player_info',{\n      action: 1,\n      data: [{\n        UUID: player._client.uuid,\n        gamemode: player.gameMode\n      }]\n    });\n    player.sendAbilities();\n  };\n\n  function fillTabList()\n  {\n    player._writeOthers('player_info',{\n      action: 0,\n      data: [{\n        UUID: player._client.uuid,\n        name: player.username,\n        properties: player.profileProperties,\n        gamemode: player.gameMode,\n        ping: player._client.latency\n      }]\n    });\n\n    player._client.write('player_info', {\n      action: 0,\n      data: serv.players.map((otherPlayer) => ({\n        UUID: otherPlayer._client.uuid,\n        name: otherPlayer.username,\n        properties: otherPlayer.profileProperties,\n        gamemode: otherPlayer.gameMode,\n        ping: otherPlayer._client.latency\n      }))\n    });\n    setInterval(() => player._client.write('player_info',{\n      action:2,\n      data:serv.players.map(otherPlayer => ({\n        UUID: otherPlayer._client.uuid,\n        ping:otherPlayer._client.latency\n      }))\n    }),5000);\n  }\n\n  function announceJoin()\n  {\n    serv.broadcast(serv.color.yellow + player.username + ' joined the game.');\n    player.emit(\"connected\");\n  }\n\n  player.waitPlayerLogin = () => {\n    const events=[\"flying\",\"look\"];\n    return new Promise(function(resolve){\n\n      const listener=()=> {\n        events.map(event => player._client.removeListener(event,listener));\n        resolve();\n      };\n      events.map(event =>player._client.on(event,listener));\n    });\n  };\n\n\n  player.login = async () =>\n  {\n    if (serv.uuidToPlayer[player._client.uuid]) {\n      //player.kick(\"You are already connected\");\n      //return;\n    }\n    if (serv.bannedPlayers[player._client.uuid]) {\n      player.kick(serv.bannedPlayers[player._client.uuid].reason);\n      return;\n    }\n    if(serv.bannedIPs[player._client.socket.remoteAddress]){\n        player.kick(serv.bannedIPs[player._client.socket.remoteAddress].reason);\n        return\n    }\n\n    addPlayer();\n    await player.findSpawnPoint();\n    sendLogin();\n    await player.sendMap();\n    player.sendSpawnPosition();\n    player.sendSelfPosition();\n    player.updateHealth(player.health);\n    player.sendAbilities();\n\n\n    updateTime();\n    fillTabList();\n    player.updateAndSpawn();\n\n    announceJoin();\n    player.emit(\"spawned\");\n\n    await player.waitPlayerLogin();\n    player.sendRestMap();\n    sendChunkWhenMove();\n  };\n};\n"]}