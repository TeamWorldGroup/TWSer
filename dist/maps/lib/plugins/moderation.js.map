{"version":3,"sources":["lib/plugins/moderation.js"],"names":["moment","require","rp","nodeUuid","module","exports","server","serv","ban","uuid","reason","bannedPlayers","time","banIP","IP","bannedIPs","players","filter","_client","socket","remoteAddress","forEach","kick","uuidInParts","plainUUID","unparse","parse","getUUIDFromUsername","username","then","body","Error","JSON","id","catch","err","banUsername","pardonUsername","pardon","pardonIP","player","end","commands","add","base","info","usage","op","str","match","parts","split","shift","join","action","kickPlayer","getPlayer","chat","emit","banPlayer","argv","length","result","nick","user"],"mappings":"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","file":"../../../lib/plugins/moderation.js","sourcesContent":["const moment=require(\"moment\");\nconst rp=require(\"request-promise\");\nconst nodeUuid=require('node-uuid');\n\nmodule.exports.server=function(serv)\n{\n\n  serv.ban = (uuid, reason) => {\n    serv.bannedPlayers[uuid] = {\n      time: +moment(),\n      reason: reason || \"Your account is banned!\"\n    };\n  };\n  serv.banIP = (IP, reason) => {\n    serv.bannedIPs[IP] = {\n      time: +moment(),\n      reason: reason || \"Your IP is banned!\"\n    };\n    Object.keys(serv.players)\n      .filter(uuid => serv.players[uuid]._client.socket.remoteAddress == IP)\n      .forEach(uuid => serv.players[uuid].kick(serv.bannedIPs[serv.players[uuid]._client.socket.remoteAddress].reason));\n  };\n\n  function uuidInParts(plainUUID)\n  {\n    return nodeUuid.unparse(nodeUuid.parse(plainUUID));\n  }\n\n  serv.getUUIDFromUsername =  username => {\n    return rp('https://api.mojang.com/users/profiles/minecraft/' + username)\n      .then((body) => {\n        if(!body) throw new Error(\"username not found\");\n        return uuidInParts(JSON.parse(body).id)\n      })\n      .catch(err => {throw err;});\n  };\n\n  serv.banUsername = (username, reason) => {\n    return serv.getUUIDFromUsername(username)\n      .then(uuid => serv.ban(uuid, reason));\n  };\n\n  serv.pardonUsername = (username) => {\n    return serv.getUUIDFromUsername(username)\n      .then(pardon);\n  };\n  \n  serv.pardonIP = (IP) => {\n    return serv.bannedIPs[IP] ? delete serv.bannedIPs[IP] : false\n  };\n\n  function pardon(uuid) {\n    if (serv.bannedPlayers[uuid]) {\n      delete serv.bannedPlayers[uuid];\n      return true;\n    }\n    return false;\n  }\n\n  serv.bannedPlayers = {};\n  serv.bannedIPs = {};\n};\n\nmodule.exports.player=function(player,serv)\n{\n  player.kick = (reason=\"You were kicked!\") =>\n    player._client.end(reason);\n\n  player.ban = reason => {\n    reason = reason || \"You were banned!\";\n    player.kick(reason);\n    const uuid=player._client.uuid;\n    serv.ban(uuid, reason);\n  };\n  player.banIP = reason => {\n    reason = reason || \"You were IP banned!\";\n    player.kick(reason);\n    serv.banIP(player._client.socket.remoteAddress)\n  };\n\n  player.pardon = () => serv.pardon(player._client.uuid);\n\n\n\n  player.commands.add({\n    base: 'kick',\n    info: 'to kick a player',\n    usage: '/kick <player> [reason]',\n    op: true,\n    parse(str) {\n      if(!str.match(/([a-zA-Z0-9_]+)(?: (.*))?/))\n        return false;\n      const parts = str.split(' ');\n      return {\n        username:parts.shift(),\n        reason:parts.join(' ')\n      };\n    },\n    action({username,reason}) {\n      const kickPlayer = serv.getPlayer(username);\n      if (!kickPlayer) {\n        player.chat(username + \" is not on this server!\");\n      } else {\n        kickPlayer.kick(reason);\n        kickPlayer.emit(\"kicked\", player, reason);\n      }\n    }\n  });\n\n  player.commands.add({\n    base: 'ban',\n    info: 'to ban a player',\n    usage: '/ban <player> [reason]',\n    op: true,\n    parse(str) {\n      if(!str.match(/([a-zA-Z0-9_]+)(?: (.*))?/))\n        return false;\n      const parts = str.split(' ');\n      return {\n        username:parts.shift(),\n        reason:parts.join(' ')\n      };\n    },\n    action({username,reason}) {\n      const banPlayer = serv.getPlayer(username);\n\n      if (!banPlayer) {\n        serv.banUsername(username, reason)\n          .then(() => {\n            serv.emit('banned', player, username, reason);\n            player.chat(username + ' was banned');\n          })\n          .catch(err => player.chat(username + \" is not a valid player!\"));\n      } else {\n        banPlayer.ban(reason);\n        serv.emit(\"banned\", player, username, reason);\n      }\n    }\n  });\n  \n  player.commands.add({\n    base: 'ban-ip',\n    info: 'bans a specific IP',\n    usage: '/ban-ip <ip> [reason]',\n    op: true,\n    parse(str){\n      const argv = str.split(' ');\n      if(argv.length < 1) return;\n      \n      return {\n        IP: argv.shift(),\n        reason: argv.shift()\n      }\n    },\n    action({IP, reason}){\n      serv.banIP(IP, reason);\n      player.chat(\"\" + IP + \" was IP banned\")\n    }\n  });\n\n  player.commands.add({\n    base: 'pardon-ip',\n    info: 'to pardon a player by ip',\n    usage: '/pardon-ip <ip>',\n    op: true,\n    action(IP) {\n      const result=serv.pardonIP(IP);\n      player.chat(result ? IP + \" was IP pardoned\" : IP+\" is not banned\");\n    }\n  });\n\n  player.commands.add({\n    base: 'pardon',\n    info: 'to pardon a player',\n    usage: '/pardon <player>',\n    op: true,\n    parse(str) {\n      if(!str.match(/([a-zA-Z0-9_]+)/))\n        return false;\n      return str;\n    },\n    action(nick) {\n      serv.pardonUsername(nick)\n        .then(()=> player.chat(nick + \" is unbanned\"))\n        .catch(err => player.chat(nick + \" is not banned\"));\n    }\n  });\n\n  player.commands.add({\n    base: 'op',\n    info: 'op any player',\n    usage: '/op <player>',\n    op: true,\n    parse(str) {\n      if (!str.match(/([a-zA-Z0-9_]+)/)) return false;\n      return str;\n    },\n    action(username) {\n      const user = serv.getPlayer(username);\n      if (!user) return 'That player is not on the server.';\n      user.op = true;\n      player.chat(username + ' is opped');\n    }\n  });\n\n  player.commands.add({\n    base: 'deop',\n    info: 'deop any player',\n    usage: '/deop <player>',\n    op: true,\n    parse(str) {\n      if (!str.match(/([a-zA-Z0-9_]+)/)) return false;\n      return str;\n    },\n    action(username) {\n      const user = serv.getPlayer(username);\n      if (!user) return 'That player is not on the server.';\n      user.op = false;\n      player.chat(username + ' is deopped');\n    }\n  });\n};"]}