{"version":3,"sources":["lib/plugins/physics.js"],"names":["blocks","require","version","Vec3","module","exports","entity","calculatePhysics","delta","gravity","addGravity","vSign","getSign","velocity","sizeSigned","x","size","y","z","xVec","position","offset","scaled","floored","yVec","zVec","world","getBlockType","boundingBox","xBlock","equals","yBlock","zBlock","getFriction","friction","newPos","clone","getMoveAmount","onGround","sendVelocity","vel","maxVel","maxVelocity","scaledVelocity","_writeNearby","entityId","id","velocityX","velocityY","velocityZ","type","addVelocityWithMax","add","dir","block","Math","floor","floorInDirection","vec","a","b","ceil","terminalvelocity","clamp","fric","max","min","c","current","newVel","player","serv","commands","base","info","usage","op","parse","str","match","action","params","selector","selectorString","parseInt","forEach","e"],"mappings":"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","file":"../../../lib/plugins/physics.js","sourcesContent":["const blocks=require(\"minecraft-data\")(require(\"flying-squid\").version).blocks;\nconst Vec3 = require(\"vec3\").Vec3;\n\nmodule.exports.entity=function(entity){\n  entity.calculatePhysics = async (delta) => {\n    if (entity.gravity) {\n      addGravity(entity, 'x', delta);\n      addGravity(entity, 'y', delta);\n      addGravity(entity, 'z', delta);\n    }\n\n    const vSign = getSign(entity.velocity);\n    const sizeSigned = new Vec3(vSign.x * entity.size.x, vSign.y * entity.size.y, vSign.z * entity.size.z);\n\n    const xVec = entity.position.offset(entity.velocity.x*delta + sizeSigned.x/2, 0, 0).scaled(1/32).floored();\n    const yVec = entity.position.offset(0, entity.velocity.y*delta + sizeSigned.y/2, 0).scaled(1/32).floored();\n    const zVec = entity.position.offset(0, 0, entity.velocity.z*delta + sizeSigned.z/2).scaled(1/32).floored();\n\n    // Get block for each (x/y/z)Vec, check to avoid duplicate getBlockTypes\n    const xBlock = blocks[await entity.world.getBlockType(xVec)].boundingBox == 'block';\n    const yBlock = yVec.equals(xVec) ? xBlock : blocks[await entity.world.getBlockType(yVec)].boundingBox == 'block';\n    const zBlock = zVec.equals(yVec) ? yBlock : (zVec.equals(xVec) ? xBlock : blocks[await entity.world.getBlockType(zVec)].boundingBox == 'block');\n\n\n    if (xBlock || yBlock || zBlock) {\n      entity.velocity.x = getFriction(entity.velocity.x, entity.friction.x, delta);\n      entity.velocity.z = getFriction(entity.velocity.z, entity.friction.z, delta);\n    }\n\n    const newPos = entity.position.clone();\n\n    newPos.x += getMoveAmount('x', xBlock, entity, delta, sizeSigned.x);\n    newPos.y += getMoveAmount('y', yBlock, entity, delta, sizeSigned.y);\n    newPos.z += getMoveAmount('z', zBlock, entity, delta, sizeSigned.z);\n\n    //serv.emitParticle(30, serv.overworld, entity.position.scaled(1/32), { size: new Vec3(0, 0, 0) });\n    return { position: newPos, onGround: yBlock}\n  };\n\n  entity.sendVelocity = (vel, maxVel) => {\n    const velocity = vel.scaled(32).floored(); // Make fixed point\n    const maxVelocity = maxVel.scaled(32).floored();\n    const scaledVelocity = velocity.scaled(8000/32/20).floored(); // from fixed-position/second to unit => 1/8000 blocks per tick\n    entity._writeNearby('entity_velocity', {\n      entityId: entity.id,\n      velocityX: scaledVelocity.x,\n      velocityY: scaledVelocity.y,\n      velocityZ: scaledVelocity.z\n    });\n    if (entity.type != 'player') {\n      if (maxVelocity) entity.velocity = addVelocityWithMax(entity.velocity, velocity, maxVelocity);\n      else entity.velocity.add(velocity);\n    }\n  };\n\n\n  function getMoveAmount(dir, block, entity, delta, sizeSigned) {\n    if (block) {\n      entity.velocity[dir] = 0;\n      return Math.floor(-1 * (entity.position[dir] + sizeSigned/2 - floorInDirection(entity.position[dir], -sizeSigned)));\n    } else {\n      return Math.floor(entity.velocity[dir] * delta);\n    }\n  }\n\n  function getSign(vec) {\n    return new Vec3(Math.sign(vec.x), Math.sign(vec.y), Math.sign(vec.z));\n  }\n\n\n  function floorInDirection(a, b) {\n    return b < 0 ? Math.floor(a) : Math.ceil(a);\n  }\n\n\n  function addGravity(entity, dir, delta) {\n    if (entity.velocity[dir] < entity.terminalvelocity[dir] && entity.velocity[dir] > -entity.terminalvelocity[dir]) {\n      entity.velocity[dir] = clamp(-entity.terminalvelocity[dir], entity.velocity[dir] + entity.gravity[dir] * delta, entity.terminalvelocity[dir]);\n    }\n  }\n\n  function getFriction(vel, fric, delta) {\n    return vel > 0 ? Math.max(0, vel - fric*delta) : Math.min(0, vel + fric*delta);\n  }\n\n  function clamp(a, b, c) {\n    return Math.max(a, Math.min(b, c));\n  }\n\n  function addVelocityWithMax(current, newVel, max) {\n    let x, y, z;\n    if (current.x > max.x || current.x < -max.x) x = current.x;\n    else x = Math.max(-max.x, Math.min(max.x, current.x + newVel.x));\n    if (current.y > max.y || current.y < -max.y) y = current.y;\n    else y = Math.max(-max.y, Math.min(max.y, current.y + newVel.y));\n    if (current.z > max.z || current.z < -max.z) z = current.z;\n    else z = Math.max(-max.z, Math.min(max.z, current.z + newVel.z));\n    return new Vec3(x, y, z);\n  }\n};\n\nmodule.exports.player = function(player, serv) {\n  player.commands.add({\n    base: 'velocity',\n    info: 'Push velocity on player(s)',\n    usage: '/velocity <player> <x> <y> <z>',\n    op: true,\n    parse(str) {\n      return str.match(/(.+?) (\\d+) (\\d+) (\\d+)/) || false;\n    },\n    action(params) {\n      const selector = player.selectorString(params[1]);\n      const vec = new Vec3(parseInt(params[2]), parseInt(params[3]), parseInt(params[4]));\n      selector.forEach(e => e.sendVelocity(vec, vec.scaled(5)));\n    }\n  });\n};"]}