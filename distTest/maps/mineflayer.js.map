{"version":3,"sources":["mineflayer.js"],"names":["net","require","mcServer","settings","mineflayer","assert","Vec3","assertPosEqual","actual","expected","isBelow","distanceTo","once","describe","bot","cb","l","entity","onGround","removeListener","on","message","msg1","equal","extra","text","waitMessage","messages","toReceive","reduce","acc","received","listener","msg","Error","length","waitMessages","all","waitLoginMessage","timeout","bot2","serv","beforeEach","options","undefined","createMCServer","createBot","host","port","username","afterEach","quit","waitSpawnZone","view","nbChunksExpected","c","it","pos","position","offset","floored","dig","blockAt","array","newBlock","type","oldBlock","creative","setInventorySlot","Item","inventory","slot","oldItem","newItem","placeBlock","chat","_client","waitDragon","done","name","initialPosition","clone","getPlayer","op","experience","points"],"mappings":"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","file":"../mineflayer.js","sourcesContent":["const net = require('net');\nconst mcServer=require(\"flying-squid\");\nconst settings = require('../config/default-settings');\nconst mineflayer = require(\"mineflayer\");\nconst assert = require('chai').assert;\nconst Vec3 = require('vec3').Vec3;\n\nfunction assertPosEqual(actual,expected) {\n  assert.isBelow(actual.distanceTo(expected),1,\"expected: \"+expected+\", actual: \"+actual+\"\\n\");\n}\nconst once = require('event-promise');\n\ndescribe(\"Server with mineflayer connection\", function()  {\n  this.timeout(10 * 60 * 1000);\n  let bot;\n  let bot2;\n  let serv;\n\n  async function onGround(bot)\n  {\n    await new Promise((cb) => {\n      const l=() => {\n        if(bot.entity.onGround) {\n          bot.removeListener(\"move\",l);\n          cb();\n        }\n      };\n      bot.on(\"move\",l);\n    });\n  }\n\n  async function waitMessage(bot,message) {\n    const msg1=await once(bot,'message');\n    assert.equal(msg1.extra[0].text,message);\n  }\n\n  async function waitMessages(bot,messages) {\n    const toReceive=messages.reduce((acc,message) => {\n      acc[message]=1;\n      return acc;\n    },{});\n    const received={};\n    return new Promise(cb => {\n      const listener=msg => {\n          const message=msg.extra[0].text;\n          if(!toReceive[message]) throw new Error(\"Received \"+message+\" , expected to receive one of \"+messages);\n          if(received[message]) throw new Error(\"Received \"+message+\" two times\");\n          received[message]=1;\n          if(Object.keys(received).length==messages.length)\n          {\n            bot.removeListener('message',listener);\n            cb();\n          }\n        };\n      bot.on('message',listener);\n    });\n  }\n\n  async function waitLoginMessage(bot) {\n    return Promise.all([waitMessages(bot,['bot joined the game.','bot2 joined the game.'])]);\n  }\n\n  beforeEach(async function () {\n    this.timeout(10 * 60 * 1000);\n    const options = settings;\n    options[\"online-mode\"]=false;\n    options[\"port\"]=25566;\n    options[\"view-distance\"]=2;\n    options[\"worldFolder\"]=undefined;\n\n    serv=mcServer.createMCServer(options);\n\n    await once(serv,\"listening\");\n    bot = mineflayer.createBot({\n      host: \"localhost\",\n      port: 25566,\n      username: \"bot\"\n    });\n    bot2 = mineflayer.createBot({\n      host: \"localhost\",\n      port: 25566,\n      username: \"bot2\"\n    });\n\n    await Promise.all([once(bot,'login'),once(bot2,'login')]);\n    bot.entity.onGround=false;\n    bot2.entity.onGround=false;\n  });\n\n  afterEach(async () => {\n    await serv.quit();\n  });\n\n  describe(\"actions\",() => {\n\n    function waitSpawnZone(bot,view)\n    {\n      const nbChunksExpected=(view*2)*(view*2);\n      let c=0;\n      return new Promise(cb => {\n        const listener=() => {\n          c++;\n          if(c==nbChunksExpected)\n          {\n            bot.removeListener('chunkColumnLoad',listener);\n            cb();\n          }\n        };\n        bot.on('chunkColumnLoad',listener);\n      });\n    }\n\n    it(\"can dig\",async function () {\n      this.timeout(10 * 60 * 1000);\n      await Promise.all([waitSpawnZone(bot,2),waitSpawnZone(bot2,2),onGround(bot),onGround(bot2)]);\n\n      const pos=bot.entity.position.offset(0,-1,0).floored();\n      bot.dig(bot.blockAt(pos));\n\n      let [,newBlock]=await once(bot2,'blockUpdate',{array:true});\n      assertPosEqual(newBlock.position,pos);\n      assert.equal(newBlock.type,0,\"block \"+pos+\" should have been dug\");\n    });\n\n\n    it(\"can place a block\",async function () {\n      this.timeout(10 * 60 * 1000);\n      await Promise.all([waitSpawnZone(bot,2),waitSpawnZone(bot2,2),onGround(bot),onGround(bot2)]);\n\n      const pos=bot.entity.position.offset(0,-2,0).floored();\n      bot.dig(bot.blockAt(pos));\n\n      let [oldBlock,newBlock]=await once(bot2,'blockUpdate',{array:true});\n      assertPosEqual(newBlock.position,pos);\n      assert.equal(newBlock.type,0,\"block \"+pos+\" should have been dug\");\n\n      bot.creative.setInventorySlot(36,new mineflayer.Item(1,1));\n      await new Promise((cb) => {\n        bot.inventory.on(\"windowUpdate\",(slot,oldItem,newItem) => {\n          if(slot==36 && newItem && newItem.type==1)\n            cb();\n        });\n      });\n\n      bot.placeBlock(bot.blockAt(pos.offset(0,-1,0)),new Vec3(0,1,0));\n\n      [oldBlock,newBlock]=await once(bot2,'blockUpdate',{array:true});\n      assertPosEqual(newBlock.position,pos);\n      assert.equal(newBlock.type,1,\"block \"+pos+\" should have been placed\");\n    });\n  });\n\n  describe(\"commands\",() => {\n\n    it(\"has an help command\", async () => {\n      await waitLoginMessage(bot);\n      bot.chat(\"/help\");\n      await once(bot,\"message\");\n    });\n    it(\"can use /particle\",async () => {\n      bot.chat(\"/particle 5 10 100 100 100\");\n      await once(bot._client,'world_particles');\n    });\n    it(\"can use /playsound\",async () => {\n      bot.chat('/playsound ambient.weather.rain');\n      await once(bot,'soundEffectHeard');\n    });\n\n    function waitDragon()\n    {\n      return new Promise((done) => {\n        const listener=(entity) => {\n          if(entity.name==\"EnderDragon\") {\n            bot.removeListener('entitySpawn',listener);\n            done();\n          }\n        };\n        bot.on('entitySpawn',listener);\n      });\n    }\n\n    it(\"can use /summon\",async () => {\n      bot.chat('/summon EnderDragon');\n      await waitDragon();\n    });\n    it(\"can use /kill\",async () => {\n      bot.chat('/summon EnderDragon');\n      await waitDragon();\n      bot.chat('/kill @e[type=EnderDragon]');\n      const entity=await once(bot,'entityDead');\n      assert.equal(entity.name,\"EnderDragon\");\n    });\n    describe(\"can use /tp\",() => {\n      it(\"can tp myself\", async () => {\n        bot.chat('/tp 2 3 4');\n        await once(bot,'forcedMove');\n        assertPosEqual(bot.entity.position, new Vec3(2, 3, 4));\n      });\n      it(\"can tp somebody else\",async () => {\n        bot.chat('/tp bot2 2 3 4');\n        await once(bot2,'forcedMove');\n        assertPosEqual(bot2.entity.position, new Vec3(2, 3, 4));\n      });\n      it(\"can tp to somebody else\",async () => {\n        await onGround(bot);\n        bot.chat('/tp bot2 bot');\n        await once(bot2,'forcedMove');\n        assertPosEqual(bot2.entity.position, bot.entity.position);\n      });\n      it(\"can tp with relative positions\",async () => {\n        await onGround(bot);\n        const initialPosition=bot.entity.position.clone();\n        bot.chat('/tp ~1 ~-2 ~3');\n        await once(bot,'forcedMove');\n        assertPosEqual(bot.entity.position,initialPosition.offset(1,-2,3));\n      });\n      it(\"can tp somebody else with relative positions\",async () => {\n        await Promise.all([onGround(bot),onGround(bot2)]);\n        const initialPosition=bot2.entity.position.clone();\n        bot.chat('/tp bot2 ~1 ~-2 ~3');\n        await once(bot2,'forcedMove');\n        assertPosEqual(bot2.entity.position,initialPosition.offset(1,-2,3));\n      });\n    });\n    it(\"can use /deop\",async () => {\n      await waitLoginMessage(bot);\n      bot.chat('/deop bot');\n      await waitMessage(bot,'bot is deopped');\n      bot.chat('/op bot');\n      await waitMessage(bot,'You do not have permission to use this command');\n      serv.getPlayer(\"bot\").op=true;\n    });\n    it(\"can use /setblock\",async() => {\n      await once(bot,'chunkColumnLoad');\n      bot.chat('/setblock 1 2 3 95 0');\n      let [,newBlock]=await once(bot,'blockUpdate:'+new Vec3(1,2,3),{array:true});\n      assert.equal(newBlock.type,95);\n    });\n    it(\"can use /xp\",async() => {\n      bot.chat('/xp 100');\n      await once(bot,\"experience\");\n      assert.equal(bot.experience.points,100);\n    });\n  });\n});\n"]}